CREATE DATABASE courseenrollmentmanagementsystem;
USE courseenrollmentmanagementsystem;

CREATE TABLE Students (
    StudentID INT PRIMARY KEY AUTO_INCREMENT,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Email VARCHAR(100),
    PhoneNumber VARCHAR(15)
);
desc Students;

CREATE TABLE Courses (
    CourseID INT PRIMARY KEY AUTO_INCREMENT,
    CourseName VARCHAR(100),
    CourseDescription TEXT,
    CourseFee DECIMAL(10, 2)
);
desc Courses;

CREATE TABLE Teachers (
    TeacherID INT PRIMARY KEY AUTO_INCREMENT,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Email VARCHAR(100),
    PhoneNumber VARCHAR (15)
);
desc Teachers;

CREATE TABLE Enrollments (
    EnrollmentID INT PRIMARY KEY AUTO_INCREMENT,
    StudentID INT Unique,
    CourseID INT,
    EnrollmentDate DATE,
    FOREIGN KEY (StudentID) REFERENCES Students(StudentID),
    FOREIGN KEY (CourseID) REFERENCES Courses(CourseID)
);
desc Enrollments;

CREATE TABLE Payments (
    PaymentID INT PRIMARY KEY AUTO_INCREMENT,
    EnrollmentID INT,
    PaymentDate DATE,
    Amount DECIMAL(10, 2),
    PaymentStatus VARCHAR(20),
    FOREIGN KEY (EnrollmentID) REFERENCES Enrollments(EnrollmentID)
);
desc Payments

CREATE TABLE Reviews (
    ReviewID INT PRIMARY KEY AUTO_INCREMENT,
    StudentID INT unique,
    CourseID INT,
    Rating INT,
    Comment TEXT,
    FOREIGN KEY (StudentID) REFERENCES Students(StudentID),
    FOREIGN KEY (CourseID) REFERENCES Courses(CourseID)
);
desc Reviews;

CREATE TABLE Classrooms (
    ClassroomID INT PRIMARY KEY AUTO_INCREMENT,
    ClassroomName VARCHAR(50),
    ClassroomCapacity INT
);
desc Classrooms;

show tables;

-- students
INSERT INTO students (FirstName, LastName, Email, PhoneNumber)
VALUES ("John", "Doe", "john.doe@example.com", "1234567890"),
("Jane", "Doe", "jane.doe@example.com", "0987654321"),
("Mike", "Johnson", "mike.johnson@example.com", "1111111111"),
("Emma", "Smith", "emma.smith@example.com", "2222222222"),
("Oliver", "Williams", "oliver.williams@example.com", "3333333333"),
("Olivia", "Brown", "olivia.brown@example.com", "4444444444"),
("James", "Jones", "james.jones@example.com", "5555555555"),
("Amelia", "Miller", "amelia.miller@example.com", "6666666666"),
("Liam", "Davis", "liam.davis@example.com", "7777777777"),
("Sophia", "Garcia", "sophia.garcia@example.com", "8888888888"),
("Benjamin", "Rodriguez", "benjamin.rodriguez@example.com", "9999999999"),
("Aiden", "Hall", "aiden.hall@example.com", "1010101010"),
("Lily", "Patel", "lily.patel@example.com", "2020202020"),
("Elijah", "Walker", "elijah.walker@example.com", "3030303030"),
("Ava", "Lee", "ava.lee@example.com", "4040404040"),
("Logan", "Martin", "logan.martin@example.com", "5050505050"),
("Isabella", "Harris", "isabella.harris@example.com", "6060606060"),
("Gabriel", "Thomas", "gabriel.thomas@example.com", "7070707070"),
("Julia", "White", "julia.white@example.com", "8080808080"),
("Mason", "Lewis", "mason.lewis@example.com", "9090909090"),
("Emily", "Ward", "emily.ward@example.com", "0101010101"),
("Caleb", "Foster", "caleb.foster@example.com", "1111111111"),
("Riley", "Sullivan", "riley.sullivan@example.com", "2222222222"),
("Landon", "Russell", "landon.russell@example.com", "3333333333"),
("Piper", "Wells", "piper.wells@example.com", "4444444444"),
("Jaxon", "Barnes", "jaxon.barnes@example.com", "5555555555"),
("Remi", "Ross", "remi.ross@example.com", "6666666666"),
("Cameron", "Fisher", "cameron.fisher@example.com", "7777777777"),
("Savannah", "Hall", "savannah.hall@example.com", "8888888888"),
("Bryson", "Martin", "bryson.martin@example.com", "9999999999"),
("Harper", "Davis", "harper.davis@example.com", "1212121212"),
("Avery", "Walker", "avery.walker@example.com", "1313131313"),
("Lila", "Lee", "lila.lee@example.com", "1414141414"),
("Ethan", "Kim", "ethan.kim@example.com", "1515151515"),
("Luna", "Patel", "luna.patel@example.com", "1616161616"),
("Julian", "Hall", "julian.hall@example.com", "1717171717"),
("Aria", "Wells", "aria.wells@example.com", "1818181818"),
("Gabriel", "Fisher", "gabriel.fisher@example.com", "1919191919"),
("Sofia", "Ross", "sofia.ross@example.com", "2020202020"),
("Mason", "Barnes", "mason.barnes@example.com", "2121212121"),
("Charlotte", "Martin", "charlotte.martin@example.com", "2222222222"),
("Oliver", "Davis", "oliver.davis@example.com", "2323232323"),
("Abigail", "Walker", "abigail.walker@example.com", "2424242424"),
("Benjamin", "Lee", "benjamin.lee@example.com", "2525252525"),
("Emily", "Kim", "emily.kim@example.com", "2626262626"),
("Logan", "Patel", "logan.patel@example.com", "2727272727"),
("Hannah", "Hall", "hannah.hall@example.com", "2828282828"),
("Alexander", "Wells", "alexander.wells@example.com", "2929292929"),
("Isabella", "Fisher", "isabella.fisher@example.com", "3030303030"),
("Michael", "Ross", "michael.ross@example.com", "3131313131"),
("Sophia", "Barnes", "sophia.barnes@example.com", "3232323232"),
("William", "Martin", "william.martin@example.com", "3333333333"),
("Olivia", "Davis", "olivia.davis@example.com", "3434343434"),
("Evelyn", "Walker", "evelyn.walker@example.com", "3535353535"),
("Henry", "Lee", "henry.lee@example.com", "3636363636"),
("Alice", "Kim", "alice.kim@example.com", "3737373737"),
("Theodore", "Patel", "theodore.patel@example.com", "3838383838"),
("Ruby", "Hall", "ruby.hall@example.com", "3939393939"),
("Elijah", "Wells", "elijah.wells@example.com", "4040404040"),
("Lily", "Fisher", "lily.fisher@example.com", "4141414141"),
("Gabriella", "Ross", "gabriella.ross@example.com", "4242424242"),
("Caleb", "Barnes", "caleb.barnes@example.com", "4343434343"),
("Aubrey", "Martin", "aubrey.martin@example.com", "4444444444"),
("Jackson", "Davis", "jackson.davis@example.com", "4545454545"),
("Peyton", "Walker", "peyton.walker@example.com", "4646464646"),
("Julia", "Lee", "julia.lee@example.com", "4747474747"),
("Kayden", "Harris", "kayden.harris@example.com", "4848484848"),
("Paisley", "White", "paisley.white@example.com", "4949494949"),
("Jasper", "Taylor", "jasper.taylor@example.com", "5050505050"),
("Rowan", "Moore", "rowan.moore@example.com", "5151515151"),
("Sage", "Hall", "sage.hall@example.com", "5252525252"),
("River", "Lee", "river.lee@example.com", "5353535353"),
("August", "Kim", "august.kim@example.com", "5454545454"),
("Indie", "Patel", "indie.patel@example.com", "5555555555"),
("Maverick", "Wells", "maverick.wells@example.com", "5656565656"),
("Remington", "Fisher", "remington.fisher@example.com", "5757575757"),
("Sawyer", "Ross", "sawyer.ross@example.com", "5858585858"),
("Tatum", "Barnes", "tatum.barnes@example.com", "5959595959"),
("Teagan", "Martin", "teagan.martin@example.com", "6060606060"),
("Tenley", "Davis", "tenley.davis@example.com", "6161616161"),
("Titan", "Walker", "titan.walker@example.com", "6262626262"),
("Vivian", "Lee", "vivian.lee@example.com", "6363636363"),
("Wesley", "Kim", "wesley.kim@example.com", "6464646464"),
("Willow", "Patel", "willow.patel@example.com", "6565656565"),
("Xander", "Wells", "xander.wells@example.com", "6666666666"),
("Yara", "Fisher", "yara.fisher@example.com", "6767676767"),
("Zachary", "Ross", "zachary.ross@example.com", "6868686868"),
("Zoe", "Barnes", "zoe.barnes@example.com", "6969696969"),
("Zoey", "Martin", "zoey.martin@example.com", "7070707070"),
("Zayden", "Davis", "zayden.davis@example.com", "7171717171"),
("Zaylee", "Walker", "zaylee.walker@example.com", "7272727272"),
("Zoelle", "Lee", "zoelle.lee@example.com", "7373737373"),
("Zara", "Kim", "zara.kim@example.com", "7474747474"),
("Zayn", "Patel", "zayn.patel@example.com", "7575757575"),
("Zoe", "Wells", "zoe.wells@example.com", "7676767676"),
("Zachariah", "Fisher", "zachariah.fisher@example.com", "7777777777"),
("Zayda", "Ross", "zayda.ross@example.com", "7878787878"),
("Zayden", "Barnes", "zayden.barnes@example.com", "7979797979"),
("Zoey", "Martin", "zoey.martin@example.com", "8080808080");

SELECT * from students;
SELECT count(*) from students;

-- courses
INSERT INTO courses (CourseName, CourseDescription, CourseFee)
VALUES ("Introduction to Programming", "Learn the basics of programming", 500.00),
("Web Development", "Learn how to build websites", 700.00),
("Data Science", "Learn how to analyze data", 800.00),
("Machine Learning", "Learn how to build machine learning models", 900.00),
("Cybersecurity", "Learn how to protect computer systems", 600.00),
("Cloud Computing", "Learn how to use cloud computing", 700.00),
("Mobile App Development", "Learn how to build mobile apps", 800.00),
("Game Development", "Learn how to build games", 900.00),
("Digital Marketing", "Learn how to market products online", 500.00),
("Project Management", "Learn how to manage projects", 600.00),
("Artificial Intelligence", "Learn the basics of AI", 1000.00),
("Database Administration", "Learn how to manage databases", 800.00),
("Network Security", "Learn how to secure networks", 900.00),
("Software Engineering", "Learn how to design and develop software", 1200.00),
("Data Analytics", "Learn how to analyze and interpret data", 1000.00),
("Computer Vision", "Learn how to build computer vision models", 1100.00),
("Natural Language Processing", "Learn how to build NLP models", 1200.00),
("Robotics", "Learn how to build and program robots", 1300.00),
("Internet of Things", "Learn how to build IoT devices", 1100.00),
("Cloud Architecture", "Learn how to design and deploy cloud architectures", 1200.00),
("DevOps", "Learn how to implement DevOps practices", 1000.00),
("Full Stack Development", "Learn how to build full stack applications", 1300.00),
("Cybersecurity Management", "Learn how to manage cybersecurity teams", 1200.00),
("Data Science with Python", "Learn how to use Python for data science", 1000.00),
("Machine Learning with R", "Learn how to use R for machine learning", 1100.00),
("Web Application Security", "Learn how to secure web applications", 1200.00),
("Cloud Security", "Learn how to secure cloud infrastructure", 1300.00),
("Artificial Intelligence with TensorFlow", "Learn how to use TensorFlow for AI", 1400.00),
("Data Visualization", "Learn how to visualize data", 1000.00),
("Business Intelligence", "Learn how to use BI tools", 1100.00),
("IT Project Management", "Learn how to manage IT projects", 1200.00),
("Software Testing", "Learn how to test software", 1000.00),
("Agile Development", "Learn how to implement agile development practices", 1100.00),
("Computer Forensics", "Learn how to investigate computer crimes", 1200.00),
("Network Architecture", "Learn how to design and deploy network architectures", 1300.00),
("Database Development", "Learn how to design and develop databases", 1200.00),
("Web Development with JavaScript", "Learn how to use JavaScript for web development", 1100.00),
("Mobile App Development with Java", "Learn how to use Java for mobile app development", 1200.00),
("Game Development with C++", "Learn how to use C++ for game development", 1300.00),
("Digital Marketing with Google Analytics", "Learn how to use Google Analytics for digital marketing", 1000.00),
("Project Management with Agile", "Learn how to use agile for project management", 1100.00),
("IT Service Management", "Learn how to manage IT services", 1200.00),
("Cloud Migration", "Learn how to migrate to the cloud", 1300.00),
("DevSecOps", "Learn how to implement DevSecOps practices", 1400.00),
("Full Stack Development with React", "Learn how to use React for full stack development", 1500.00),
("Cybersecurity with CompTIA Security+", "Learn how to use CompTIA Security+ for cybersecurity", 1600.00),
("Data Science with Tableau", "Learn how to use Tableau for data science", 1700.00),
("Machine Learning with AWS", "Learn how to use AWS for machine learning", 1800.00),
("Web Application Development with Django", "Learn how to use Django for web application development", 1900.00),
("Cloud Computing with Azure", "Learn how to use Azure for cloud computing", 2000.00),
("Artificial Intelligence with PyTorch", "Learn how to use PyTorch for AI", 2100.00),
("Data Visualization with Power BI", "Learn how to use Power BI for data visualization", 2200.00),
("Business Intelligence with SQL Server", "Learn how to use SQL Server for business intelligence", 2300.00),
("IT Project Management with Scrum", "Learn how to use Scrum for IT project management", 2400.00),
("Software Testing with Selenium", "Learn how to use Selenium for software testing", 2500.00),
("Cloud Native Application Development", "Learn how to build cloud-native applications", 2100.00),
("DevOps Engineering", "Learn how to implement DevOps practices", 2200.00),
("Cybersecurity Analytics", "Learn how to analyze cybersecurity threats", 2300.00),
("Data Science with Julia", "Learn how to use Julia for data science", 2400.00),
("Machine Learning with Google Cloud", "Learn how to use Google Cloud for machine learning", 2500.00),
("Web Application Development with Vue.js", "Learn how to use Vue.js for web application development", 2600.00),
("Cloud Computing with Oracle", "Learn how to use Oracle for cloud computing", 2700.00),
("Artificial Intelligence with Keras", "Learn how to use Keras for AI", 2800.00),
("Data Visualization with D3.js", "Learn how to use D3.js for data visualization", 2900.00),
("Business Intelligence with Oracle", "Learn how to use Oracle for business intelligence", 3000.00),
("IT Project Management with Kanban", "Learn how to use Kanban for IT project management", 3100.00),
("Software Testing with Appium", "Learn how to use Appium for software testing", 3200.00),
("Cloud Security with AWS", "Learn how to use AWS for cloud security", 3300.00),
("DevSecOps with Jenkins", "Learn how to use Jenkins for DevSecOps", 3400.00),
("Full Stack Development with Angular", "Learn how to use Angular for full stack development", 3500.00),
("Cybersecurity with CISSP", "Learn how to use CISSP for cybersecurity", 3600.00),
("Data Science with RStudio", "Learn how to use RStudio for data science", 3700.00),
("Machine Learning with TensorFlow.js", "Learn how to use TensorFlow.js for machine learning", 3800.00),
("Web Application Development with Ruby on Rails", "Learn how to use Ruby on Rails for web application development", 3900.00),
("Cloud Computing with Alibaba Cloud", "Learn how to use Alibaba Cloud for cloud computing", 4000.00),
("Artificial Intelligence with OpenCV", "Learn how to use OpenCV for AI", 4100.00),
("Data Visualization with Matplotlib", "Learn how to use Matplotlib for data visualization", 4200.00),
("Business Intelligence with SAP", "Learn how to use SAP for business intelligence", 4300.00),
("IT Project Management with Waterfall", "Learn how to use Waterfall for IT project management", 4400.00),
("Software Testing with TestNG", "Learn how to use TestNG for software testing", 4500.00),
("Cloud Security with Azure", "Learn how to use Azure for cloud security", 4600.00),
("DevSecOps with GitLab", "Learn how to use GitLab for DevSecOps", 4700.00),
("Full Stack Development with Ember.js", "Learn how to use Ember.js for full stack development", 4800.00),
("Cybersecurity with CompTIA Cybersecurity Analyst", "Learn how to use CompTIA Cybersecurity Analyst for cybersecurity", 4900.00),
("Data Science with Python Data Science Handbook", "Learn how to use Python Data Science Handbook for data science", 5000.00),
("Machine Learning with Scikit-learn", "Learn how to use Scikit-learn for machine learning", 5100.00),
("Web Application Development with Laravel", "Learn how to use Laravel for web application development", 5200.00),
("Cloud Computing with IBM Cloud", "Learn how to use IBM Cloud for cloud computing", 5300.00),
("Artificial Intelligence with Microsoft Cognitive Services", "Learn how to use Microsoft Cognitive Services for AI", 5400.00),
("Data Visualization with Plotly", "Learn how to use Plotly for data visualization", 5500.00),
("Business Intelligence with Microsoft Power BI", "Learn how to use Microsoft Power BI for business intelligence", 5600.00),
("IT Project Management with PRINCE2", "Learn how to use PRINCE2 for IT project management", 5700.00),
("Software Testing with Cucumber", "Learn how to use Cucumber for software testing", 5800.00),
("Full Stack Development with Ember.js", "Learn how to use Ember.js for full stack development", 4800.00),
("Cybersecurity with CompTIA Cybersecurity Analyst", "Learn how to use CompTIA Cybersecurity Analyst for cybersecurity", 4900.00),
("Data Science with Python Data Science Handbook", "Learn how to use Python Data Science Handbook for data science", 5000.00),
("Machine Learning with Scikit-learn", "Learn how to use Scikit-learn for machine learning", 5100.00),
("Web Application Development with Laravel", "Learn how to use Laravel for web application development", 5200.00),
("Cloud Computing with IBM Cloud", "Learn how to use IBM Cloud for cloud computing", 5300.00),
("Artificial Intelligence with Microsoft Cognitive Services", "Learn how to use Microsoft Cognitive Services for AI", 5400.00),
("Data Visualization with Plotly", "Learn how to use Plotly for data visualization", 5500.00),
("Business Intelligence with Microsoft Power BI", "Learn how to use Microsoft Power BI for business intelligence", 5600.00),
("IT Project Management with PRINCE2", "Learn how to use PRINCE2 for IT project management", 5700.00),
("Software Testing with Cucumber", "Learn how to use Cucumber for software testing", 5800.00);

SELECT * from courses;
SELECT count(*) from courses;

-- teachers
INSERT INTO teachers (FirstName, LastName, Email, PhoneNumber)
VALUES ("Mark", "Taylor", "mark.taylor@example.com", "1234567890"),
("Lucy", "Lee", "lucy.lee@example.com", "0987654321"),
("David", "Kim", "david.kim@example.com", "1111111111"),
("Emily", "White", "emily.white@example.com", "2222222222"),
("Michael", "Martin", "michael.martin@example.com", "3333333333"),
("Jessica", "Thompson", "jessica.thompson@example.com", "4444444444"),
("Daniel", "Moore", "daniel.moore@example.com", "5555555555"),
("Ashley", "Clark", "ashley.clark@example.com", "6666666666"), 
("Alexander", "Hall", "alexander.hall@example.com", "7777777777"),
("Samantha", "Walker", "samantha.walker@example.com", "8888888888"),
("Benjamin", "Davis", "benjamin.davis@example.com", "9999999999"),
("Olivia", "Martin", "olivia.martin@example.com", "1010101010"),
("Ethan", "Lee", "ethan.lee@example.com", "1111111111"),
("Ava", "Kim", "ava.kim@example.com", "1212121212"),
("Liam", "White", "liam.white@example.com", "1313131313"),
("Isabella", "Taylor", "isabella.taylor@example.com", "1414141414"),
("Noah", "Moore", "noah.moore@example.com", "1515151515"),
("Sophia", "Clark", "sophia.clark@example.com", "1616161616"),
("Mia", "Thompson", "mia.thompson@example.com", "1717171717"),
("William", "Hall", "william.hall@example.com", "1818181818"),
("Charlotte", "Walker", "charlotte.walker@example.com", "1919191919"),
("Gabriel", "Davis", "gabriel.davis@example.com", "2020202020"),
("Abigail", "Martin", "abigail.martin@example.com", "2121212121"),
("Finn", "Lee", "finn.lee@example.com", "2222222222"),
("Emily", "Kim", "emily.kim@example.com", "2323232323"),
("Logan", "White", "logan.white@example.com", "2424242424"),
("Hannah", "Taylor", "hannah.taylor@example.com", "2525252525"),
("Jackson", "Moore", "jackson.moore@example.com", "2626262626"),
("Avery", "Clark", "avery.clark@example.com", "2727272727"),
("Riley", "Thompson", "riley.thompson@example.com", "2828282828"),
("Julian", "Hall", "julian.hall@example.com", "2929292929"),
("Lily", "Walker", "lily.walker@example.com", "3030303030"),
("Caleb", "Davis", "caleb.davis@example.com", "3131313131"),
("Madison", "Martin", "madison.martin@example.com", "3232323232"),
("Jaxon", "Lee", "jaxon.lee@example.com", "3333333333"),
("Piper", "Kim", "piper.kim@example.com", "3434343434"),
("Sage", "White", "sage.white@example.com", "3535353535"),
("Remi", "Taylor", "remi.taylor@example.com", "3636363636"),
("Cameron", "Moore", "cameron.moore@example.com", "3737373737"),
("Aubrey", "Clark", "aubrey.clark@example.com", "3838383838"),
("Peyton", "Thompson", "peyton.thompson@example.com", "3939393939"),
("Rowan", "Hall", "rowan.hall@example.com", "4040404040"),
("Sawyer", "Walker", "sawyer.walker@example.com", "4141414141"),
("Tatum", "Davis", "tatum.davis@example.com", "4242424242"),
("Teagan", "Martin", "teagan.martin@example.com", "4343434343"),
("Tenley", "Lee", "tenley.lee@example.com", "4444444444"),
("Titan", "Kim", "titan.kim@example.com", "4545454545"),
("Vivian", "White", "vivian.white@example.com", "4646464646"),
("Wesley", "Taylor", "wesley.taylor@example.com", "4747474747"),
("Willow", "Moore", "willow.moore@example.com", "4848484848"),
("Xander", "Clark", "xander.clark@example.com", "4949494949"),
("Yara", "Thompson", "yara.thompson@example.com", "5050505050"),
("Zachary", "Hall", "zachary.hall@example.com", "5151515151"),
("Zoe", "Walker", "zoe.walker@example.com", "5252525252"),
("Zayden", "Russell", "zayden.russell@example.com", "5353535353"),
("Zoelle", "Patel", "zoelle.patel@example.com", "5454545454"),
("Zaylee", "Fisher", "zaylee.fisher@example.com", "5555555555"),
("Zoey", "Ross", "zoey.ross@example.com", "5656565656"),
("Zachariah", "Barnes", "zachariah.barnes@example.com", "5757575757"),
("Zara", "Martin", "zara.martin@example.com", "5858585858"),
("Zayn", "Davis", "zayn.davis@example.com", "5959595959"),
("Zoe", "Walker", "zoe.walker@example.com", "6060606060"),
("Zayden", "Lee", "zayden.lee@example.com", "6161616161"),
("Zoelle", "Kim", "zoelle.kim@example.com", "6262626262"),
("Zaylee", "White", "zaylee.white@example.com", "6363636363"),
("Zoey", "Taylor", "zoey.taylor@example.com", "6464646464"),
("Zachariah", "Moore", "zachariah.moore@example.com", "6565656565"),
("Zara", "Clark", "zara.clark@example.com", "6666666666"),
("Zayn", "Thompson", "zayn.thompson@example.com", "6767676767"),
("Zoe", "Hall", "zoe.hall@example.com", "6868686868"),
("Zayden", "Walker", "zayden.walker@example.com", "6969696969"),
("Zoelle", "Davis", "zoelle.davis@example.com", "7070707070"),
("Zaylee", "Martin", "zaylee.martin@example.com", "7171717171"),
("Zoey", "Lee", "zoey.lee@example.com", "7272727272"),
("Zachariah", "Kim", "zachariah.kim@example.com", "7373737373"),
("Zara", "White", "zara.white@example.com", "7474747474"),
("Zayn", "Taylor", "zayn.taylor@example.com", "7575757575"),
("Zoe", "Moore", "zoe.moore@example.com", "7676767676"),
("Zayden", "Clark", "zayden.clark@example.com", "7777777777"),
("Zoelle", "Thompson", "zoelle.thompson@example.com", "7878787878"),
("Zaylee", "Hall", "zaylee.hall@example.com", "7979797979"),
("Zoey", "Walker", "zoey.walker@example.com", "8080808080"),
("Zachariah", "Davis", "zachariah.davis@example.com", "8181818181"),
("Zara", "Martin", "zara.martin@example.com", "8282828282"),
("Zayn", "Lee", "zayn.lee@example.com", "8383838383"),
("Zoe", "Kim", "zoe.kim@example.com", "8484848484"),
("Zayden", "White", "zayden.white@example.com", "8585858585"),
("Zoelle", "Taylor", "zoelle.taylor@example.com", "8686868686"),
("Zaylee", "Moore", "zaylee.moore@example.com", "8787878787"),
("Zaylee", "Hall", "zaylee.hall@example.com", "7979797979"),
("Zoey", "Walker", "zoey.walker@example.com", "8080808080"),
("Zachariah", "Davis", "zachariah.davis@example.com", "8181818181"),
("Zara", "Martin", "zara.martin@example.com", "8282828282"),
("Zayn", "Lee", "zayn.lee@example.com", "8383838383"),
("Zoe", "Kim", "zoe.kim@example.com", "8484848484"),
("Zayden", "White", "zayden.white@example.com", "8585858585"),
("Zoelle", "Taylor", "zoelle.taylor@example.com", "8686868686"),
("Zaylee", "Moore", "zaylee.moore@example.com", "8787878787");

SELECT * from teachers;
SELECT count(*) from teachers;

INSERT INTO Enrollments (StudentID, CourseID, EnrollmentDate)
VALUES
(401, 1, '2020-01-01'),
(402, 2, '2020-01-15'),
(403, 1, '2020-02-01'),
(404, 3, '2020-03-01'),
(405, 2, '2020-04-01'),
(406, 1, '2020-05-01'),
(407, 4, '2020-06-01'),
(408, 3, '2020-07-01'),
(409, 2, '2020-08-01'),
(410, 1, '2020-09-01'),
(411, 4, '2020-10-01'),
(412, 3, '2020-11-01'),
(413, 1, '2020-12-01'),
(414, 4, '2021-01-01'),
(415, 3, '2021-02-01'),
(416, 2, '2021-03-01'),
(417, 1, '2021-04-01'),
(418, 4, '2021-05-01'),
(419, 1, '2021-06-01'),
(420, 2, '2021-07-01'),
(421, 3, '2021-08-01'),
(422, 2, '2021-09-01'),
(423, 3, '2021-10-01'),
(424, 4, '2021-11-01'),
(425, 1, '2021-12-01'),
(426, 2, '2022-01-01'),
(427, 3, '2022-02-01'),
(428, 1, '2022-03-01'),
(429, 2, '2022-04-01'),
(430, 4, '2022-05-01'),
(431, 1, '2022-06-01'),
(432, 4, '2022-07-01'),
(433, 3, '2022-08-01'),
(434, 1, '2022-09-01'),
(435, 2, '2022-10-01'),
(436, 3, '2022-11-01'),
(437, 1, '2022-12-01'),
(438, 4, '2023-01-01'),
(439, 2, '2023-02-01'),
(440, 1, '2023-03-01'),
(441, 4, '2023-04-01'),
(442, 3, '2023-05-01'),
(443, 1, '2023-06-01'),
(444, 4, '2023-07-01'),
(445, 3, '2023-08-01'),
(446, 2, '2023-09-01'),
(447, 2, '2023-10-01'),
(448, 3, '2023-11-01'),
(449, 1, '2023-12-01'),
(450, 4, '2024-01-01'),
(451, 1, '2024-02-01'),
(452, 3, '2024-03-01'),
(453, 2, '2024-04-01'),
(454, 4, '2024-05-01'),
(455, 3, '2024-06-01'),
(456, 2, '2024-07-01'),
(457, 1, '2024-08-01'),
(458, 4, '2024-09-01'),
(459, 2, '2020-01-05'),
(460, 3, '2020-01-10'),
(461, 4, '2020-01-15'),
(462, 5, '2020-01-20'),
(463, 2, '2020-02-01'),
(464, 3, '2020-02-05'),
(465, 4, '2020-02-10'),
(466, 5, '2020-02-15'),
(467, 1, '2020-02-20'),
(468, 3, '2020-03-01'),
(469, 4, '2020-03-05'),
(470, 5, '2020-03-10'),
(471, 1, '2020-03-15'),
(472, 2, '2020-04-01'),
(473, 1, '2020-05-01'),
(474, 4, '2020-06-01'),
(475, 3, '2020-07-01'),
(476, 2, '2020-08-01'),
(477, 1, '2020-09-01'),
(478, 4, '2020-10-01'),
(479, 3, '2020-11-01'),
(480, 2, '2020-12-01'),
(481, 1, '2021-01-01'),
(482, 4, '2021-02-01'),
(483, 3, '2021-03-01'),
(484, 2, '2021-04-01'),
(485, 1, '2021-05-01'),
(486, 4, '2021-06-01'),
(487, 3, '2021-07-01'),
(488, 2, '2021-08-01'),
(489, 1, '2021-09-01'),
(490, 4, '2021-10-01'),
(491, 3, '2021-11-01'),
(492, 2, '2021-12-01'),
(493, 1, '2022-01-01'),
(494, 4, '2022-02-01'),
(495, 3, '2022-03-01'),
(496, 2, '2022-04-01'),
(497, 1, '2022-05-01'),
(498, 4, '2022-06-01'),
(499, 3, '2022-07-01'),
(500, 2, '2022-08-01');

SELECT * from Enrollments;
SELECT count(*) from Enrollments;

-- payments
INSERT INTO payments (EnrollmentID, PaymentDate, Amount, PaymentStatus)
VALUES (1, '2023-01-01', 500.00, 'Completed'),
(2, '2023-01-02', 700.00, 'Completed'),
(3, '2023-01-03', 800.00, 'Completed'),
(4, '2023-01-04', 900.00, 'Completed'),
(5, '2023-01-05', 600.00, 'Completed'),
(6, '2023-01-06', 700.00, 'Completed'),
(7, '2023-01-07', 800.00, 'Completed'),
(8, '2023-01-08', 900.00, 'Completed'),
(9, '2023-01-09', 500.00, 'Completed'),
(10, '2023-01-10', 600.00, 'Completed'),
(11, '2023-01-11', 500.00, 'Completed'),
(12, '2023-01-12', 700.00, 'Completed'),
(13, '2023-01-13', 800.00, 'Completed'),
(14, '2023-01-14', 900.00, 'Completed'),
(15, '2023-01-15', 600.00, 'Completed'),
(16, '2023-01-16', 700.00, 'Completed'),
(17, '2023-01-17', 800.00, 'Completed'),
(18, '2023-01-18', 900.00, 'Completed'),
(19, '2023-01-19', 500.00, 'Completed'),
(20, '2023-01-20', 600.00, 'Completed'),
(21, '2023-01-21', 400.00, 'Pending'),
(22, '2023-01-22', 950.00, 'Completed'),
(23, '2023-01-23', 650.00, 'Failed'),
(24, '2023-01-24', 850.00, 'Completed'),
(25, '2023-01-25', 550.00, 'Pending'),
(26, '2023-01-26', 750.00, 'Completed'),
(27, '2023-01-27', 950.00, 'Failed'),
(28, '2023-01-28', 600.00, 'Completed'),
(29, '2023-01-29', 800.00, 'Pending'),
(30, '2023-01-30', 700.00, 'Completed'),
(31, '2023-01-31', 500.00, 'Failed'),
(32, '2023-02-01', 900.00, 'Completed'),
(33, '2023-02-02', 650.00, 'Pending'),
(34, '2023-02-03', 850.00, 'Completed'),
(35, '2023-02-04', 750.00, 'Failed'),
(36, '2023-02-05', 600.00, 'Completed'),
(37, '2023-02-06', 950.00, 'Pending'),
(38, '2023-02-07', 800.00, 'Completed'),
(39, '2023-02-08', 550.00, 'Failed'),
(40, '2023-02-09', 700.00, 'Completed'),
(41, '2023-02-10', 900.00, 'Pending'),
(42, '2023-02-11', 650.00, 'Completed'),
(43, '2023-02-12', 850.00, 'Failed'),
(44, '2023-02-13', 750.00, 'Completed'),
(45, '2023-02-14', 600.00, 'Pending'),
(46, '2023-02-15', 950.00, 'Completed'),
(47, '2023-02-16', 800.00, 'Failed'),
(48, '2023-02-17', 550.00, 'Completed'),
(49, '2023-02-18', 700.00, 'Pending'),
(50, '2023-02-19', 900.00, 'Completed'),
(51, '2023-02-20', 650.00, 'Completed'),
(52, '2023-02-21', 850.00, 'Pending'),
(53, '2023-02-22', 750.00, 'Failed'),
(54, '2023-02-23', 600.00, 'Completed'),
(55, '2023-02-24', 950.00, 'Pending'),
(56, '2023-02-25', 800.00, 'Completed'),
(57, '2023-02-26', 550.00, 'Failed'),
(58, '2023-02-27', 700.00, 'Completed'),
(59, '2023-02-28', 900.00, 'Pending'),
(60, '2023-03-01', 650.00, 'Completed'),
(61, '2023-03-02', 850.00, 'Failed'),
(62, '2023-03-03', 750.00, 'Completed'),
(63, '2023-03-04', 600.00, 'Pending'),
(64, '2023-03-05', 950.00, 'Completed'),
(65, '2023-03-06', 800.00, 'Failed'),
(66, '2023-03-07', 550.00, 'Completed'),
(67, '2023-03-08', 700.00, 'Pending'),
(68, '2023-03-09', 900.00, 'Completed'),
(69, '2023-03-10', 650.00, 'Failed'),
(70, '2023-03-11', 850.00, 'Completed'),
(71, '2023-03-12', 750.00, 'Pending'),
(72, '2023-03-13', 600.00, 'Completed'),
(73, '2023-03-14', 950.00, 'Failed'),
(74, '2023-03-15', 800.00, 'Completed'),
(75, '2023-03-16', 550.00, 'Pending'),
(76, '2023-03-17', 700.00, 'Completed'),
(77, '2023-03-18', 900.00, 'Failed'),
(78, '2023-03-19', 650.00, 'Completed'),
(79, '2023-03-20', 850.00, 'Pending'),
(80, '2023-03-21', 750.00, 'Completed'),
(81, '2023-03-22', 600.00, 'Failed'),
(82, '2023-03-23', 950.00, 'Completed'),
(83, '2023-03-24', 800.00, 'Pending'),
(84, '2023-03-25', 550.00, 'Completed'),
(85, '2023-03-26', 700.00, 'Failed'),
(86, '2023-03-27', 900.00, 'Completed'),
(87, '2023-03-28', 650.00, 'Pending'),
(88, '2023-03-29', 850.00, 'Completed'),
(89, '2023-03-30', 750.00, 'Failed'),
(90, '2023-03-31', 600.00, 'Completed'),
(91, '2023-04-01', 950.00, 'Completed'),
(92, '2023-04-02', 800.00, 'Pending'),
(93, '2023-04-03', 550.00, 'Failed'),
(94, '2023-04-04', 700.00, 'Completed'),
(95, '2023-04-05', 900.00, 'Pending'),
(96, '2023-04-06', 650.00, 'Completed'),
(97, '2023-04-07', 850.00, 'Failed'),
(98, '2023-04-08', 750.00, 'Completed'),
(99, '2023-04-09', 600.00, 'Pending'),
(100, '2023-04-10', 950.00, 'Completed');

SELECT * from payments;
SELECT count(*) from payments;

-- reviews
INSERT INTO reviews (StudentID, CourseID, Rating, Comment)
VALUES (401, 1, 5, 'Great course!'),
(402, 2, 4, 'Good course, but could be improved.'),
(403, 1, 5, 'Excellent course!'),
(404, 3, 3, 'Average course.'),
(405, 2, 4, 'Good course.'),
(406, 1, 5, 'Excellent course!'),
(407, 4, 4, 'Good course, but could be improved.'),
(408, 3, 5, 'Excellent course!'),
(409, 2, 3, 'Average course.'),
(410, 1, 4, 'Good course.'),
(411, 4, 5, 'Great course!'),
(412, 3, 4, 'Good course, but could be improved.'),
(413, 1, 5, 'Excellent course!'),
(414, 4, 3, 'Average course.'),
(415, 3, 4, 'Good course.'),
(416, 2, 5, 'Excellent course!'),
(417, 1, 4, 'Good course, but could be improved.'),
(418, 4, 5, 'Excellent course!'),
(419, 1, 3, 'Average course.'),
(420, 2, 4, 'Good course.'), 
(421, 3, 5, 'Great course!'),
(422, 2, 4, 'Good course.'),
(423, 3, 5, 'Excellent course!'),
(424, 4, 4, 'Good course, but could be improved.'),
(425, 1, 5, 'Excellent course!'),
(426, 2, 3, 'Average course.'),
(427, 3, 4, 'Good course.'),
(428, 1, 5, 'Great course!'),
(429, 2, 4, 'Good course.'),
(430, 4, 4, 'Good course, but could be improved.'),
(431, 1, 5, 'Excellent course!'),
(432, 4, 3, 'Average course.'),
(433, 3, 5, 'Excellent course!'),
(434, 1, 4, 'Good course.'),
(435, 2, 4, 'Good course, but could be improved.'),
(436, 3, 5, 'Great course!'),
(437, 1, 4, 'Good course.'),
(438, 4, 3, 'Average course.'),
(439, 2, 4, 'Good course.'),
(440, 1, 5, 'Excellent course!'),
(441, 4, 4, 'Good course, but could be improved.'),
(442, 3, 5, 'Great course!'),
(443, 1, 4, 'Good course.'),
(444, 4, 3, 'Average course.'),
(445, 3, 5, 'Excellent course!'),
(446, 2, 4, 'Good course.'),
(447, 2, 4, 'Good course, but could be improved.'),
(448, 3, 5, 'Great course!'),
(449, 1, 4, 'Good course.'),
(450, 4, 3, 'Average course.'),
(451, 1, 5, 'Excellent course!'),
(452, 3, 4, 'Good course, but could be improved.'),
(453, 2, 5, 'Great course!'),
(454, 4, 4, 'Good course.'),
(455, 3, 4, 'Good course, but could be improved.'),
(456, 2, 5, 'Excellent course!'),
(457, 1, 4, 'Good course.'),
(458, 4, 3, 'Average course.'),
(459, 2, 4, 'Good course.'),
(460, 3, 5, 'Great course!'),
(461, 4, 4, 'Good course, but could be improved.'),
(462, 5, 5, 'Excellent course!'),
(463, 2, 4, 'Good course.'),
(464, 3, 3, 'Average course.'),
(465, 4, 5, 'Excellent course!'),
(466, 5, 4, 'Good course.'),
(467, 1, 4, 'Good course, but could be improved.'),
(468, 3, 5, 'Great course!'),
(469, 4, 4, 'Good course.'),
(470, 5, 3, 'Average course.'),
(471, 1, 4, 'Good course.'),
(472, 2, 5, 'Excellent course!'),
(473, 1, 4, 'Good course, but could be improved.'),
(474, 4, 5, 'Great course!'),
(475, 3, 4, 'Good course.'),
(476, 2, 3, 'Average course.'),
(477, 1, 5, 'Excellent course!'),
(478, 4, 4, 'Good course.'),
(479, 3, 4, 'Good course, but could be improved.'),
(480, 2, 5, 'Great course!'),
(481, 1, 4, 'Good course.'),
(482, 4, 3, 'Average course.'),
(483, 3, 4, 'Good course, but could be improved.'),
(484, 2, 5, 'Excellent course!'),
(485, 1, 4, 'Good course.'),
(486, 4, 4, 'Good course.'),
(487, 3, 4, 'Good course, but could be improved.'),
(488, 2, 3, 'Average course.'),
(489, 1, 5, 'Excellent course!'),
(490, 4, 4, 'Good course.'),
(491, 3, 4, 'Good course, but could be improved.'),
(492, 2, 5, 'Great course!'),
(493, 1, 4, 'Good course.'),
(494, 4, 3, 'Average course.'),
(495, 3, 4, 'Good course.'),
(496, 2, 5, 'Excellent course!'),2
(497, 1, 4, 'Good course, but could be improved.'),
(498, 4, 5, 'Great course!'),
(499, 3, 4, 'Good course.'),
(500, 2, 3, 'Average course.');


SELECT * from reviews;
SELECT count(*) from reviews;

-- classrooms 
INSERT INTO classrooms (ClassroomName, ClassroomCapacity) VALUES 
("Classroom 1", 30), 
("Classroom 2", 30), 
("Classroom 3", 30), 
("Classroom 4", 30), 
("Classroom 5", 30), 
("Classroom 6", 30), 
("Classroom 7", 30),
("Classroom 8", 30), 
("Classroom 9", 30), 
("Classroom 10", 30), 
("Classroom 11", 30), 
("Classroom 12", 30), 
("Classroom 13", 30), 
("Classroom 14", 30), 
("Classroom 15", 30), 
("Classroom 16", 30), 
("Classroom 17", 30), 
("Classroom 18", 30), 
("Classroom 19", 30), 
("Classroom 20", 30),
("Classroom 21", 40),
("Classroom 22", 40),
("Classroom 23", 40),
("Classroom 24", 40),
("Classroom 25", 40),
("Classroom 26", 40),
("Classroom 27", 40),
("Classroom 28", 40),
("Classroom 29", 40),
("Classroom 30", 40),
("Classroom 31", 40),
("Classroom 32", 40),
("Classroom 33", 40),
("Classroom 34", 40),
("Classroom 35", 40),
("Classroom 36", 40),
("Classroom 37", 40),
("Classroom 38", 40),
("Classroom 39", 40),
("Classroom 40", 40),
("Classroom 41", 50),
("Classroom 42", 50),
("Classroom 43", 50),
("Classroom 44", 50),
("Classroom 45", 50),
("Classroom 46", 50),
("Classroom 47", 50),
("Classroom 48", 50),
("Classroom 49", 50),
("Classroom 50", 50),
("Classroom 51", 50),
("Classroom 52", 50),
("Classroom 53", 50),
("Classroom 54", 50),
("Classroom 55", 50),
("Classroom 56", 50),
("Classroom 57", 50),
("Classroom 58", 50),
("Classroom 59", 50),
("Classroom 60", 50),
("Classroom 61", 60),
("Classroom 62", 60),
("Classroom 63", 60),
("Classroom 64", 60),
("Classroom 65", 60),
("Classroom 66", 60),
("Classroom 67", 60),
("Classroom 68", 60),
("Classroom 69", 60),
("Classroom 70", 60),
("Classroom 71", 60),
("Classroom 72", 60),
("Classroom 73", 60),
("Classroom 74", 60),
("Classroom 75", 60),
("Classroom 76", 60),
("Classroom 77", 60),
("Classroom 78", 60),
("Classroom 79", 60),
("Classroom 80", 60),
("Classroom 81", 70),
("Classroom 82", 70),
("Classroom 83", 70),
("Classroom 84", 70),
("Classroom 85", 70),
("Classroom 86", 70),
("Classroom 87", 70),
("Classroom 88", 70),
("Classroom 89", 70),
("Classroom 90", 70),
("Classroom 91", 70),
("Classroom 92", 70),
("Classroom 93", 70),
("Classroom 94", 70),
("Classroom 95", 70),
("Classroom 96", 70),
("Classroom 97", 70),
("Classroom 98", 70),
("Classroom 99", 70),
("Classroom 100", 70);

SELECT * from classrooms;
SELECT count(*) from classrooms;